{"id":"node_modules/secrets.js/secrets.js","dependencies":[{"name":"/Users/dominik/Desktop/projects/movie-frontend/package.json","includedInParent":true,"mtime":1657715463984},{"name":"/Users/dominik/Desktop/projects/movie-frontend/node_modules/secrets.js/package.json","includedInParent":true,"mtime":1657715463639},{"name":"crypto","loc":{"line":90,"column":53,"index":2692},"parent":"/Users/dominik/Desktop/projects/movie-frontend/node_modules/secrets.js/secrets.js","resolved":"/Users/dominik/Desktop/projects/movie-frontend/node_modules/crypto-browserify/index.js"}],"generated":{"js":"var global = arguments[3];\n// secrets.js - by Alexander Stetsyuk - released under MIT License\n(function(exports, global){\nvar defaults = {\n\tbits: 8, // default number of bits\n\tradix: 16, // work with HEX by default\n\tminBits: 3,\n\tmaxBits: 20, // this permits 1,048,575 shares, though going this high is NOT recommended in JS!\n\t\n\tbytesPerChar: 2,\n\tmaxBytesPerChar: 6, // Math.pow(256,7) > Math.pow(2,53)\n\t\t\n\t// Primitive polynomials (in decimal form) for Galois Fields GF(2^n), for 2 <= n <= 30\n\t// The index of each term in the array corresponds to the n for that polynomial\n\t// i.e. to get the polynomial for n=16, use primitivePolynomials[16]\n\tprimitivePolynomials: [null,null,1,3,3,5,3,3,29,17,9,5,83,27,43,3,45,9,39,39,9,5,3,33,27,9,71,39,9,5,83],\n\t\n\t// warning for insecure PRNG\n\twarning: 'WARNING:\\nA secure random number generator was not found.\\nUsing Math.random(), which is NOT cryptographically strong!'\n};\n\n// Protected settings object\nvar config = {};\n\n/** @expose **/\nexports.getConfig = function(){\n\treturn {\n\t\t'bits': config.bits,\n\t\t'unsafePRNG': config.unsafePRNG\n\t};\n};\n\nfunction init(bits){\n\tif(bits && (typeof bits !== 'number' || bits%1 !== 0 || bits<defaults.minBits || bits>defaults.maxBits)){\n\t\tthrow new Error('Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')\n\t}\n\t\n\tconfig.radix = defaults.radix;\n\tconfig.bits = bits || defaults.bits;\n\tconfig.size = Math.pow(2, config.bits);\n\tconfig.max = config.size - 1;\n\t\n\t// Construct the exp and log tables for multiplication.\t\n\tvar logs = [], exps = [], x = 1, primitive = defaults.primitivePolynomials[config.bits];\n\tfor(var i=0; i<config.size; i++){\n\t\texps[i] = x;\n\t\tlogs[x] = i;\n\t\tx <<= 1;\n\t\tif(x >= config.size){\n\t\t\tx ^= primitive;\n\t\t\tx &= config.max;\n\t\t}\n\t}\n\t\t\n\tconfig.logs = logs;\n\tconfig.exps = exps;\n};\n\n/** @expose **/\nexports.init = init;\n\nfunction isInited(){\n\tif(!config.bits || !config.size || !config.max  || !config.logs || !config.exps || config.logs.length !== config.size || config.exps.length !== config.size){\n\t\treturn false;\n\t}\n\treturn true;\n};\n\n// Returns a pseudo-random number generator of the form function(bits){}\n// which should output a random string of 1's and 0's of length `bits`\nfunction getRNG(){\n\tvar randomBits, crypto;\n\t\n\tfunction construct(bits, arr, radix, size){\n\t\tvar str = '',\n\t\t\ti = 0,\n\t\t\tlen = arr.length-1;\n\t\twhile( i<len || (str.length < bits) ){\n\t\t\tstr += padLeft(parseInt(arr[i], radix).toString(2), size);\n\t\t\ti++;\n\t\t}\n\t\tstr = str.substr(-bits);\n\t\tif( (str.match(/0/g)||[]).length === str.length){ // all zeros?\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\t// node.js crypto.randomBytes()\n\tif(typeof require === 'function' && (crypto=require('crypto')) && (randomBits=crypto['randomBytes'])){\n\t\treturn function(bits){\n\t\t\tvar bytes = Math.ceil(bits/8),\n\t\t\t\tstr = null;\n\t\t\n\t\t\twhile( str === null ){\n\t\t\t\tstr = construct(bits, randomBits(bytes).toString('hex'), 16, 4);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\t// browsers with window.crypto.getRandomValues()\n\tif(global['crypto'] && typeof global['crypto']['getRandomValues'] === 'function' && typeof global['Uint32Array'] === 'function'){\n\t\tcrypto = global['crypto'];\n\t\treturn function(bits){\n\t\t\tvar elems = Math.ceil(bits/32),\n\t\t\t\tstr = null,\n\t\t\t\tarr = new global['Uint32Array'](elems);\n\n\t\t\twhile( str === null ){\n\t\t\t\tcrypto['getRandomValues'](arr);\n\t\t\t\tstr = construct(bits, arr, 10, 32);\n\t\t\t}\n\t\t\t\n\t\t\treturn str;\t\n\t\t}\n\t}\n\n\t// A totally insecure RNG!!! (except in Safari)\n\t// Will produce a warning every time it is called.\n\tconfig.unsafePRNG = true;\n\twarn();\n\t\n\tvar bitsPerNum = 32;\n\tvar max = Math.pow(2,bitsPerNum)-1;\n\treturn function(bits){\n\t\tvar elems = Math.ceil(bits/bitsPerNum);\n\t\tvar arr = [], str=null;\n\t\twhile(str===null){\n\t\t\tfor(var i=0; i<elems; i++){\n\t\t\t\tarr[i] = Math.floor(Math.random() * max + 1); \n\t\t\t}\n\t\t\tstr = construct(bits, arr, 10, bitsPerNum);\n\t\t}\n\t\treturn str;\n\t};\n};\n\n// Warn about using insecure rng.\n// Called when Math.random() is being used.\nfunction warn(){\n\tglobal['console']['warn'](defaults.warning);\n\tif(typeof global['alert'] === 'function' && config.alert){\n\t\tglobal['alert'](defaults.warning);\n\t}\n}\n\n// Set the PRNG to use. If no RNG function is supplied, pick a default using getRNG()\n/** @expose **/\nexports.setRNG = function(rng, alert){\n\tif(!isInited()){\n\t\tthis.init();\n\t}\n\tconfig.unsafePRNG=false;\n\trng = rng || getRNG();\n\t\n\t// test the RNG (5 times)\n\tif(typeof rng !== 'function' || typeof rng(config.bits) !== 'string' || !parseInt(rng(config.bits),2) || rng(config.bits).length > config.bits || rng(config.bits).length < config.bits){\n\t\tthrow new Error(\"Random number generator is invalid. Supply an RNG of the form function(bits){} that returns a string containing 'bits' number of random 1's and 0's.\")\n\t}else{\n\t\tconfig.rng = rng;\n\t}\n\tconfig.alert = !!alert;\n\t\n\treturn !!config.unsafePRNG;\n};\n\nfunction isSetRNG(){\n\treturn typeof config.rng === 'function'; \n};\n\n// Generates a random bits-length number string using the PRNG\n/** @expose **/\nexports.random = function(bits){\n\tif(!isSetRNG()){\n\t\tthis.setRNG();\n\t}\n\t\n\tif(typeof bits !== 'number' || bits%1 !== 0 || bits < 2){\n\t\tthrow new Error('Number of bits must be an integer greater than 1.')\n\t}\n\t\n\tif(config.unsafePRNG){\n\t\twarn();\n\t}\n\treturn bin2hex(config.rng(bits));\n}\n\n// Divides a `secret` number String str expressed in radix `inputRadix` (optional, default 16) \n// into `numShares` shares, each expressed in radix `outputRadix` (optional, default to `inputRadix`), \n// requiring `threshold` number of shares to reconstruct the secret. \n// Optionally, zero-pads the secret to a length that is a multiple of padLength before sharing.\n/** @expose **/\nexports.share = function(secret, numShares, threshold, padLength, withoutPrefix){\n\tif(!isInited()){\n\t\tthis.init();\n\t}\n\tif(!isSetRNG()){\n\t\tthis.setRNG();\n\t}\n\t\n\tpadLength =  padLength || 0;\n\t\t\n\tif(typeof secret !== 'string'){\n\t\tthrow new Error('Secret must be a string.');\n\t}\n\tif(typeof numShares !== 'number' || numShares%1 !== 0 || numShares < 2){\n\t\tthrow new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.')\n\t}\n\tif(numShares > config.max){\n\t\tvar neededBits = Math.ceil(Math.log(numShares +1)/Math.LN2);\n\t\tthrow new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive. To create ' + numShares + ' shares, use at least ' + neededBits + ' bits.')\t\n\t}\n\tif(typeof threshold !== 'number' || threshold%1 !== 0 || threshold < 2){\n\t\tthrow new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.');\n\t}\n\tif(threshold > config.max){\n\t\tvar neededBits = Math.ceil(Math.log(threshold +1)/Math.LN2);\n\t\tthrow new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.  To use a threshold of ' + threshold + ', use at least ' + neededBits + ' bits.');\n\t}\n\tif(typeof padLength !== 'number' || padLength%1 !== 0 ){\n\t\tthrow new Error('Zero-pad length must be an integer greater than 1.');\n\t}\n\t\n\tif(config.unsafePRNG){\n\t\twarn();\n\t}\n\t\n\tsecret = '1' + hex2bin(secret); // append a 1 so that we can preserve the correct number of leading zeros in our secret\n\tsecret = split(secret, padLength);\t\n\tvar x = new Array(numShares), y = new Array(numShares);\n\tfor(var i=0, len = secret.length; i<len; i++){\n\t\tvar subShares = this._getShares(secret[i], numShares, threshold);\n\t\tfor(var j=0; j<numShares; j++){\n\t\t\tx[j] = x[j] || subShares[j].x.toString(config.radix);\n\t\t\ty[j] = padLeft(subShares[j].y.toString(2)) + (y[j] ? y[j] : '');\n\t\t}\n\t}\n\tvar padding = config.max.toString(config.radix).length;\n\tif(withoutPrefix){\n\t\tfor(var i=0; i<numShares; i++){\n\t\t\tx[i] = bin2hex(y[i]);\n\t\t}\n\t}else{\n\t\tfor(var i=0; i<numShares; i++){\n\t\t\tx[i] = config.bits.toString(36).toUpperCase() + padLeft(x[i],padding) + bin2hex(y[i]);\n\t\t}\n\t}\n\t\n\treturn x;\n};\n\n// This is the basic polynomial generation and evaluation function \n// for a `config.bits`-length secret (NOT an arbitrary length)\n// Note: no error-checking at this stage! If `secrets` is NOT \n// a NUMBER less than 2^bits-1, the output will be incorrect!\n/** @expose **/\nexports._getShares = function(secret, numShares, threshold){\t\n\tvar shares = [];\n\tvar coeffs = [secret]; \n\t\t\n\tfor(var i=1; i<threshold; i++){\n\t\tcoeffs[i] = parseInt(config.rng(config.bits),2);\n\t}\n\tfor(var i=1, len = numShares+1; i<len; i++){\n\t\tshares[i-1] = {\n\t\t\tx: i,\n\t\t\ty: horner(i, coeffs)\n\t\t}\n\t}\n\treturn shares;\n};\n\t\n// Polynomial evaluation at `x` using Horner's Method\n// TODO: this can possibly be sped up using other methods\n// NOTE: fx=fx * x + coeff[i] ->  exp(log(fx) + log(x)) + coeff[i], \n//       so if fx===0, just set fx to coeff[i] because\n//       using the exp/log form will result in incorrect value\nfunction horner(x, coeffs){\n\tvar logx = config.logs[x];\n\tvar fx = 0;\n\tfor(var i=coeffs.length-1; i>=0; i--){\t\n\t\tif(fx === 0){\n\t\t\tfx = coeffs[i];\n\t\t\tcontinue;\n\t\t}\n\t\tfx = config.exps[ (logx + config.logs[fx]) % config.max ] ^ coeffs[i];\n\t}\n\treturn fx;\n};\n\nfunction inArray(arr,val){\n\tfor(var i = 0,len=arr.length; i < len; i++) {\n\t\tif(arr[i] === val){\n   \t\t return true;\n\t \t}\n \t}\n\treturn false;\n};\n\nfunction processShare(share){\n\t\n\tvar bits = parseInt(share[0], 36);\n\tif(bits && (typeof bits !== 'number' || bits%1 !== 0 || bits<defaults.minBits || bits>defaults.maxBits)){\n\t\tthrow new Error('Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')\n\t}\n\t\n\tvar max = Math.pow(2, bits) - 1;\n\tvar idLength = max.toString(config.radix).length;\n\t\n\tvar id = parseInt(share.substr(1, idLength), config.radix);\n\tif(typeof id !== 'number' || id%1 !== 0 || id<1 || id>max){\n\t\tthrow new Error('Share id must be an integer between 1 and ' + config.max + ', inclusive.');\n\t}\n\tshare = share.substr(idLength + 1);\n\tif(!share.length){\n\t\tthrow new Error('Invalid share: zero-length share.')\n\t}\n\treturn {\n\t\t'bits': bits,\n\t\t'id': id,\n\t\t'value': share\n\t};\n};\n\n/** @expose **/\nexports._processShare = processShare;\n\n// Protected method that evaluates the Lagrange interpolation\n// polynomial at x=`at` for individual config.bits-length\n// segments of each share in the `shares` Array.\n// Each share is expressed in base `inputRadix`. The output \n// is expressed in base `outputRadix'\nfunction combine(at, shares){\n\tvar setBits, share, x = [], y = [], result = '', idx;\t\n\t\n\tfor(var i=0, len = shares.length; i<len; i++){\n\t\tshare = processShare(shares[i]);\n\t\tif(typeof setBits === 'undefined'){\n\t\t\tsetBits = share['bits'];\n\t\t}else if(share['bits'] !== setBits){\n\t\t\tthrow new Error('Mismatched shares: Different bit settings.')\n\t\t}\n\t\t\n\t\tif(config.bits !== setBits){\n\t\t\tinit(setBits);\n\t\t}\n\t\t\n\t\tif(inArray(x, share['id'])){ // repeated x value?\n\t\t\tcontinue;\n\t\t}\n\t\n\t\tidx = x.push(share['id']) - 1;\n\t\tshare = split(hex2bin(share['value']));\n\t\tfor(var j=0, len2 = share.length; j<len2; j++){\n\t\t\ty[j] = y[j] || [];\n\t\t\ty[j][idx] = share[j];\n\t\t}\n\t}\n\t\n\tfor(var i=0, len=y.length; i<len; i++){\n\t\tresult = padLeft(lagrange(at, x, y[i]).toString(2)) + result;\n\t}\n\n\tif(at===0){// reconstructing the secret\n\t\tvar idx = result.indexOf('1'); //find the first 1\n\t\treturn bin2hex(result.slice(idx+1));\n\t}else{// generating a new share\n\t\treturn bin2hex(result);\n\t}\n};\n\n// Combine `shares` Array into the original secret\n/** @expose **/\nexports.combine = function(shares){\n\treturn combine(0, shares);\n};\n\n// Generate a new share with id `id` (a number between 1 and 2^bits-1)\n// `id` can be a Number or a String in the default radix (16)\n/** @expose **/\nexports.newShare = function(id, shares){\n\tif(typeof id === 'string'){\n\t\tid = parseInt(id, config.radix);\t\n\t}\n\t\n\tvar share = processShare(shares[0]);\n\tvar max = Math.pow(2, share['bits']) - 1;\n\t\n\tif(typeof id !== 'number' || id%1 !== 0 || id<1 || id>max){\n\t\tthrow new Error('Share id must be an integer between 1 and ' + config.max + ', inclusive.');\n\t}\n\n\tvar padding = max.toString(config.radix).length;\n\treturn config.bits.toString(36).toUpperCase() + padLeft(id.toString(config.radix), padding) + combine(id, shares);\n};\n\t\n// Evaluate the Lagrange interpolation polynomial at x = `at`\n// using x and y Arrays that are of the same length, with\n// corresponding elements constituting points on the polynomial.\nfunction lagrange(at, x, y){\n\tvar sum = 0,\n\t\tproduct, \n\t\ti, j;\n\t\t\n\tfor(var i=0, len = x.length; i<len; i++){\n\t\tif(!y[i]){\n\t\t\tcontinue; \n\t\t}\n\t\t\t\n\t\tproduct = config.logs[y[i]];\n\t\tfor(var j=0; j<len; j++){\n\t\t\tif(i === j){ continue; }\n\t\t\tif(at === x[j]){ // happens when computing a share that is in the list of shares used to compute it\n\t\t\t\tproduct = -1; // fix for a zero product term, after which the sum should be sum^0 = sum, not sum^1\n\t\t\t\tbreak; \n\t\t\t}\n\t\t\tproduct = ( product + config.logs[at ^ x[j]] - config.logs[x[i] ^ x[j]] + config.max/* to make sure it's not negative */ ) % config.max;\n\t\t}\n\t\t\t\n\t\tsum = product === -1 ? sum : sum ^ config.exps[product]; // though exps[-1]= undefined and undefined ^ anything = anything in chrome, this behavior may not hold everywhere, so do the check\n\t}\n\treturn sum;\n};\n\n/** @expose **/\nexports._lagrange = lagrange;\n\n// Splits a number string `bits`-length segments, after first \n// optionally zero-padding it to a length that is a multiple of `padLength.\n// Returns array of integers (each less than 2^bits-1), with each element\n// representing a `bits`-length segment of the input string from right to left, \n// i.e. parts[0] represents the right-most `bits`-length segment of the input string.\nfunction split(str, padLength){\n\tif(padLength){\n\t\tstr = padLeft(str, padLength)\n\t}\n\tvar parts = [];\n\tfor(var i=str.length; i>config.bits; i-=config.bits){\n\t\tparts.push(parseInt(str.slice(i-config.bits, i), 2));\n\t}\t\n\tparts.push(parseInt(str.slice(0, i), 2));\t\n\treturn parts;\n};\n\t\n// Pads a string `str` with zeros on the left so that its length is a multiple of `bits`\nfunction padLeft(str, bits){\n\tbits = bits || config.bits\n\tvar missing = str.length % bits;\n\treturn (missing ? new Array(bits - missing + 1).join('0') : '') + str;\n};\n\nfunction hex2bin(str){\n\tvar bin = '', num;\n\tfor(var i=str.length - 1; i>=0; i--){\n\t\tnum = parseInt(str[i], 16)\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid hex character.')\n\t\t}\n\t\tbin = padLeft(num.toString(2), 4) + bin;\n\t}\n\treturn bin;\n}\n\nfunction bin2hex(str){\n\tvar hex = '', num;\n\tstr = padLeft(str, 4);\n\tfor(var i=str.length; i>=4; i-=4){\n\t\tnum = parseInt(str.slice(i-4, i), 2);\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid binary character.')\n\t\t}\n\t\thex = num.toString(16) + hex;\n\t}\n\treturn hex;\n}\n\t\n// Converts a given UTF16 character string to the HEX representation. \n// Each character of the input string is represented by \n// `bytesPerChar` bytes in the output string.\n/** @expose **/\nexports.str2hex = function(str, bytesPerChar){\n\tif(typeof str !== 'string'){\n\t\tthrow new Error('Input must be a character string.');\n\t}\n\tbytesPerChar = bytesPerChar || defaults.bytesPerChar;\n\t\n\tif(typeof bytesPerChar !== 'number' || bytesPerChar%1 !== 0 || bytesPerChar<1 || bytesPerChar > defaults.maxBytesPerChar){\n\t\tthrow new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')\n\t}\n\t\n\tvar hexChars = 2*bytesPerChar;\n\tvar max = Math.pow(16, hexChars) - 1;\n\tvar out = '', num;\n\tfor(var i=0, len=str.length; i<len; i++){\n\t\tnum = str[i].charCodeAt();\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid character: ' + str[i]);\n\t\t}else if(num > max){\n\t\t\tvar neededBytes = Math.ceil(Math.log(num+1)/Math.log(256));\n\t\t\tthrow new Error('Invalid character code (' + num +'). Maximum allowable is 256^bytes-1 (' + max + '). To convert this character, use at least ' + neededBytes + ' bytes.')\n\t\t}else{\n\t\t\tout = padLeft(num.toString(16), hexChars) + out;\n\t\t}\n\t}\n\treturn out;\n};\n\t\n// Converts a given HEX number string to a UTF16 character string. \n/** @expose **/\nexports.hex2str = function(str, bytesPerChar){\n\tif(typeof str !== 'string'){\n\t\tthrow new Error('Input must be a hexadecimal string.');\n\t}\n\tbytesPerChar = bytesPerChar || defaults.bytesPerChar;\n\t\n\tif(typeof bytesPerChar !== 'number' || bytesPerChar%1 !== 0 || bytesPerChar<1 || bytesPerChar > defaults.maxBytesPerChar){\n\t\tthrow new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')\n\t}\n\t\n\tvar hexChars = 2*bytesPerChar;\n\tvar out = '';\n\tstr = padLeft(str, hexChars);\n\tfor(var i=0, len = str.length; i<len; i+=hexChars){\n\t\tout = String.fromCharCode(parseInt(str.slice(i, i+hexChars),16)) + out;\n\t}\n\treturn out;\n};\n\t\n// by default, initialize without an RNG\nexports.init();\n})(typeof module !== 'undefined' && module['exports'] ? module['exports'] : (window['secrets'] = {}), typeof GLOBAL !== 'undefined' ? GLOBAL : window );"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/secrets.js/secrets.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/secrets.js/secrets.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}}],"sources":{"node_modules/secrets.js/secrets.js":"// secrets.js - by Alexander Stetsyuk - released under MIT License\n(function(exports, global){\nvar defaults = {\n\tbits: 8, // default number of bits\n\tradix: 16, // work with HEX by default\n\tminBits: 3,\n\tmaxBits: 20, // this permits 1,048,575 shares, though going this high is NOT recommended in JS!\n\t\n\tbytesPerChar: 2,\n\tmaxBytesPerChar: 6, // Math.pow(256,7) > Math.pow(2,53)\n\t\t\n\t// Primitive polynomials (in decimal form) for Galois Fields GF(2^n), for 2 <= n <= 30\n\t// The index of each term in the array corresponds to the n for that polynomial\n\t// i.e. to get the polynomial for n=16, use primitivePolynomials[16]\n\tprimitivePolynomials: [null,null,1,3,3,5,3,3,29,17,9,5,83,27,43,3,45,9,39,39,9,5,3,33,27,9,71,39,9,5,83],\n\t\n\t// warning for insecure PRNG\n\twarning: 'WARNING:\\nA secure random number generator was not found.\\nUsing Math.random(), which is NOT cryptographically strong!'\n};\n\n// Protected settings object\nvar config = {};\n\n/** @expose **/\nexports.getConfig = function(){\n\treturn {\n\t\t'bits': config.bits,\n\t\t'unsafePRNG': config.unsafePRNG\n\t};\n};\n\nfunction init(bits){\n\tif(bits && (typeof bits !== 'number' || bits%1 !== 0 || bits<defaults.minBits || bits>defaults.maxBits)){\n\t\tthrow new Error('Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')\n\t}\n\t\n\tconfig.radix = defaults.radix;\n\tconfig.bits = bits || defaults.bits;\n\tconfig.size = Math.pow(2, config.bits);\n\tconfig.max = config.size - 1;\n\t\n\t// Construct the exp and log tables for multiplication.\t\n\tvar logs = [], exps = [], x = 1, primitive = defaults.primitivePolynomials[config.bits];\n\tfor(var i=0; i<config.size; i++){\n\t\texps[i] = x;\n\t\tlogs[x] = i;\n\t\tx <<= 1;\n\t\tif(x >= config.size){\n\t\t\tx ^= primitive;\n\t\t\tx &= config.max;\n\t\t}\n\t}\n\t\t\n\tconfig.logs = logs;\n\tconfig.exps = exps;\n};\n\n/** @expose **/\nexports.init = init;\n\nfunction isInited(){\n\tif(!config.bits || !config.size || !config.max  || !config.logs || !config.exps || config.logs.length !== config.size || config.exps.length !== config.size){\n\t\treturn false;\n\t}\n\treturn true;\n};\n\n// Returns a pseudo-random number generator of the form function(bits){}\n// which should output a random string of 1's and 0's of length `bits`\nfunction getRNG(){\n\tvar randomBits, crypto;\n\t\n\tfunction construct(bits, arr, radix, size){\n\t\tvar str = '',\n\t\t\ti = 0,\n\t\t\tlen = arr.length-1;\n\t\twhile( i<len || (str.length < bits) ){\n\t\t\tstr += padLeft(parseInt(arr[i], radix).toString(2), size);\n\t\t\ti++;\n\t\t}\n\t\tstr = str.substr(-bits);\n\t\tif( (str.match(/0/g)||[]).length === str.length){ // all zeros?\n\t\t\treturn null;\n\t\t}else{\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\t// node.js crypto.randomBytes()\n\tif(typeof require === 'function' && (crypto=require('crypto')) && (randomBits=crypto['randomBytes'])){\n\t\treturn function(bits){\n\t\t\tvar bytes = Math.ceil(bits/8),\n\t\t\t\tstr = null;\n\t\t\n\t\t\twhile( str === null ){\n\t\t\t\tstr = construct(bits, randomBits(bytes).toString('hex'), 16, 4);\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\t// browsers with window.crypto.getRandomValues()\n\tif(global['crypto'] && typeof global['crypto']['getRandomValues'] === 'function' && typeof global['Uint32Array'] === 'function'){\n\t\tcrypto = global['crypto'];\n\t\treturn function(bits){\n\t\t\tvar elems = Math.ceil(bits/32),\n\t\t\t\tstr = null,\n\t\t\t\tarr = new global['Uint32Array'](elems);\n\n\t\t\twhile( str === null ){\n\t\t\t\tcrypto['getRandomValues'](arr);\n\t\t\t\tstr = construct(bits, arr, 10, 32);\n\t\t\t}\n\t\t\t\n\t\t\treturn str;\t\n\t\t}\n\t}\n\n\t// A totally insecure RNG!!! (except in Safari)\n\t// Will produce a warning every time it is called.\n\tconfig.unsafePRNG = true;\n\twarn();\n\t\n\tvar bitsPerNum = 32;\n\tvar max = Math.pow(2,bitsPerNum)-1;\n\treturn function(bits){\n\t\tvar elems = Math.ceil(bits/bitsPerNum);\n\t\tvar arr = [], str=null;\n\t\twhile(str===null){\n\t\t\tfor(var i=0; i<elems; i++){\n\t\t\t\tarr[i] = Math.floor(Math.random() * max + 1); \n\t\t\t}\n\t\t\tstr = construct(bits, arr, 10, bitsPerNum);\n\t\t}\n\t\treturn str;\n\t};\n};\n\n// Warn about using insecure rng.\n// Called when Math.random() is being used.\nfunction warn(){\n\tglobal['console']['warn'](defaults.warning);\n\tif(typeof global['alert'] === 'function' && config.alert){\n\t\tglobal['alert'](defaults.warning);\n\t}\n}\n\n// Set the PRNG to use. If no RNG function is supplied, pick a default using getRNG()\n/** @expose **/\nexports.setRNG = function(rng, alert){\n\tif(!isInited()){\n\t\tthis.init();\n\t}\n\tconfig.unsafePRNG=false;\n\trng = rng || getRNG();\n\t\n\t// test the RNG (5 times)\n\tif(typeof rng !== 'function' || typeof rng(config.bits) !== 'string' || !parseInt(rng(config.bits),2) || rng(config.bits).length > config.bits || rng(config.bits).length < config.bits){\n\t\tthrow new Error(\"Random number generator is invalid. Supply an RNG of the form function(bits){} that returns a string containing 'bits' number of random 1's and 0's.\")\n\t}else{\n\t\tconfig.rng = rng;\n\t}\n\tconfig.alert = !!alert;\n\t\n\treturn !!config.unsafePRNG;\n};\n\nfunction isSetRNG(){\n\treturn typeof config.rng === 'function'; \n};\n\n// Generates a random bits-length number string using the PRNG\n/** @expose **/\nexports.random = function(bits){\n\tif(!isSetRNG()){\n\t\tthis.setRNG();\n\t}\n\t\n\tif(typeof bits !== 'number' || bits%1 !== 0 || bits < 2){\n\t\tthrow new Error('Number of bits must be an integer greater than 1.')\n\t}\n\t\n\tif(config.unsafePRNG){\n\t\twarn();\n\t}\n\treturn bin2hex(config.rng(bits));\n}\n\n// Divides a `secret` number String str expressed in radix `inputRadix` (optional, default 16) \n// into `numShares` shares, each expressed in radix `outputRadix` (optional, default to `inputRadix`), \n// requiring `threshold` number of shares to reconstruct the secret. \n// Optionally, zero-pads the secret to a length that is a multiple of padLength before sharing.\n/** @expose **/\nexports.share = function(secret, numShares, threshold, padLength, withoutPrefix){\n\tif(!isInited()){\n\t\tthis.init();\n\t}\n\tif(!isSetRNG()){\n\t\tthis.setRNG();\n\t}\n\t\n\tpadLength =  padLength || 0;\n\t\t\n\tif(typeof secret !== 'string'){\n\t\tthrow new Error('Secret must be a string.');\n\t}\n\tif(typeof numShares !== 'number' || numShares%1 !== 0 || numShares < 2){\n\t\tthrow new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.')\n\t}\n\tif(numShares > config.max){\n\t\tvar neededBits = Math.ceil(Math.log(numShares +1)/Math.LN2);\n\t\tthrow new Error('Number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive. To create ' + numShares + ' shares, use at least ' + neededBits + ' bits.')\t\n\t}\n\tif(typeof threshold !== 'number' || threshold%1 !== 0 || threshold < 2){\n\t\tthrow new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.');\n\t}\n\tif(threshold > config.max){\n\t\tvar neededBits = Math.ceil(Math.log(threshold +1)/Math.LN2);\n\t\tthrow new Error('Threshold number of shares must be an integer between 2 and 2^bits-1 (' + config.max + '), inclusive.  To use a threshold of ' + threshold + ', use at least ' + neededBits + ' bits.');\n\t}\n\tif(typeof padLength !== 'number' || padLength%1 !== 0 ){\n\t\tthrow new Error('Zero-pad length must be an integer greater than 1.');\n\t}\n\t\n\tif(config.unsafePRNG){\n\t\twarn();\n\t}\n\t\n\tsecret = '1' + hex2bin(secret); // append a 1 so that we can preserve the correct number of leading zeros in our secret\n\tsecret = split(secret, padLength);\t\n\tvar x = new Array(numShares), y = new Array(numShares);\n\tfor(var i=0, len = secret.length; i<len; i++){\n\t\tvar subShares = this._getShares(secret[i], numShares, threshold);\n\t\tfor(var j=0; j<numShares; j++){\n\t\t\tx[j] = x[j] || subShares[j].x.toString(config.radix);\n\t\t\ty[j] = padLeft(subShares[j].y.toString(2)) + (y[j] ? y[j] : '');\n\t\t}\n\t}\n\tvar padding = config.max.toString(config.radix).length;\n\tif(withoutPrefix){\n\t\tfor(var i=0; i<numShares; i++){\n\t\t\tx[i] = bin2hex(y[i]);\n\t\t}\n\t}else{\n\t\tfor(var i=0; i<numShares; i++){\n\t\t\tx[i] = config.bits.toString(36).toUpperCase() + padLeft(x[i],padding) + bin2hex(y[i]);\n\t\t}\n\t}\n\t\n\treturn x;\n};\n\n// This is the basic polynomial generation and evaluation function \n// for a `config.bits`-length secret (NOT an arbitrary length)\n// Note: no error-checking at this stage! If `secrets` is NOT \n// a NUMBER less than 2^bits-1, the output will be incorrect!\n/** @expose **/\nexports._getShares = function(secret, numShares, threshold){\t\n\tvar shares = [];\n\tvar coeffs = [secret]; \n\t\t\n\tfor(var i=1; i<threshold; i++){\n\t\tcoeffs[i] = parseInt(config.rng(config.bits),2);\n\t}\n\tfor(var i=1, len = numShares+1; i<len; i++){\n\t\tshares[i-1] = {\n\t\t\tx: i,\n\t\t\ty: horner(i, coeffs)\n\t\t}\n\t}\n\treturn shares;\n};\n\t\n// Polynomial evaluation at `x` using Horner's Method\n// TODO: this can possibly be sped up using other methods\n// NOTE: fx=fx * x + coeff[i] ->  exp(log(fx) + log(x)) + coeff[i], \n//       so if fx===0, just set fx to coeff[i] because\n//       using the exp/log form will result in incorrect value\nfunction horner(x, coeffs){\n\tvar logx = config.logs[x];\n\tvar fx = 0;\n\tfor(var i=coeffs.length-1; i>=0; i--){\t\n\t\tif(fx === 0){\n\t\t\tfx = coeffs[i];\n\t\t\tcontinue;\n\t\t}\n\t\tfx = config.exps[ (logx + config.logs[fx]) % config.max ] ^ coeffs[i];\n\t}\n\treturn fx;\n};\n\nfunction inArray(arr,val){\n\tfor(var i = 0,len=arr.length; i < len; i++) {\n\t\tif(arr[i] === val){\n   \t\t return true;\n\t \t}\n \t}\n\treturn false;\n};\n\nfunction processShare(share){\n\t\n\tvar bits = parseInt(share[0], 36);\n\tif(bits && (typeof bits !== 'number' || bits%1 !== 0 || bits<defaults.minBits || bits>defaults.maxBits)){\n\t\tthrow new Error('Number of bits must be an integer between ' + defaults.minBits + ' and ' + defaults.maxBits + ', inclusive.')\n\t}\n\t\n\tvar max = Math.pow(2, bits) - 1;\n\tvar idLength = max.toString(config.radix).length;\n\t\n\tvar id = parseInt(share.substr(1, idLength), config.radix);\n\tif(typeof id !== 'number' || id%1 !== 0 || id<1 || id>max){\n\t\tthrow new Error('Share id must be an integer between 1 and ' + config.max + ', inclusive.');\n\t}\n\tshare = share.substr(idLength + 1);\n\tif(!share.length){\n\t\tthrow new Error('Invalid share: zero-length share.')\n\t}\n\treturn {\n\t\t'bits': bits,\n\t\t'id': id,\n\t\t'value': share\n\t};\n};\n\n/** @expose **/\nexports._processShare = processShare;\n\n// Protected method that evaluates the Lagrange interpolation\n// polynomial at x=`at` for individual config.bits-length\n// segments of each share in the `shares` Array.\n// Each share is expressed in base `inputRadix`. The output \n// is expressed in base `outputRadix'\nfunction combine(at, shares){\n\tvar setBits, share, x = [], y = [], result = '', idx;\t\n\t\n\tfor(var i=0, len = shares.length; i<len; i++){\n\t\tshare = processShare(shares[i]);\n\t\tif(typeof setBits === 'undefined'){\n\t\t\tsetBits = share['bits'];\n\t\t}else if(share['bits'] !== setBits){\n\t\t\tthrow new Error('Mismatched shares: Different bit settings.')\n\t\t}\n\t\t\n\t\tif(config.bits !== setBits){\n\t\t\tinit(setBits);\n\t\t}\n\t\t\n\t\tif(inArray(x, share['id'])){ // repeated x value?\n\t\t\tcontinue;\n\t\t}\n\t\n\t\tidx = x.push(share['id']) - 1;\n\t\tshare = split(hex2bin(share['value']));\n\t\tfor(var j=0, len2 = share.length; j<len2; j++){\n\t\t\ty[j] = y[j] || [];\n\t\t\ty[j][idx] = share[j];\n\t\t}\n\t}\n\t\n\tfor(var i=0, len=y.length; i<len; i++){\n\t\tresult = padLeft(lagrange(at, x, y[i]).toString(2)) + result;\n\t}\n\n\tif(at===0){// reconstructing the secret\n\t\tvar idx = result.indexOf('1'); //find the first 1\n\t\treturn bin2hex(result.slice(idx+1));\n\t}else{// generating a new share\n\t\treturn bin2hex(result);\n\t}\n};\n\n// Combine `shares` Array into the original secret\n/** @expose **/\nexports.combine = function(shares){\n\treturn combine(0, shares);\n};\n\n// Generate a new share with id `id` (a number between 1 and 2^bits-1)\n// `id` can be a Number or a String in the default radix (16)\n/** @expose **/\nexports.newShare = function(id, shares){\n\tif(typeof id === 'string'){\n\t\tid = parseInt(id, config.radix);\t\n\t}\n\t\n\tvar share = processShare(shares[0]);\n\tvar max = Math.pow(2, share['bits']) - 1;\n\t\n\tif(typeof id !== 'number' || id%1 !== 0 || id<1 || id>max){\n\t\tthrow new Error('Share id must be an integer between 1 and ' + config.max + ', inclusive.');\n\t}\n\n\tvar padding = max.toString(config.radix).length;\n\treturn config.bits.toString(36).toUpperCase() + padLeft(id.toString(config.radix), padding) + combine(id, shares);\n};\n\t\n// Evaluate the Lagrange interpolation polynomial at x = `at`\n// using x and y Arrays that are of the same length, with\n// corresponding elements constituting points on the polynomial.\nfunction lagrange(at, x, y){\n\tvar sum = 0,\n\t\tproduct, \n\t\ti, j;\n\t\t\n\tfor(var i=0, len = x.length; i<len; i++){\n\t\tif(!y[i]){\n\t\t\tcontinue; \n\t\t}\n\t\t\t\n\t\tproduct = config.logs[y[i]];\n\t\tfor(var j=0; j<len; j++){\n\t\t\tif(i === j){ continue; }\n\t\t\tif(at === x[j]){ // happens when computing a share that is in the list of shares used to compute it\n\t\t\t\tproduct = -1; // fix for a zero product term, after which the sum should be sum^0 = sum, not sum^1\n\t\t\t\tbreak; \n\t\t\t}\n\t\t\tproduct = ( product + config.logs[at ^ x[j]] - config.logs[x[i] ^ x[j]] + config.max/* to make sure it's not negative */ ) % config.max;\n\t\t}\n\t\t\t\n\t\tsum = product === -1 ? sum : sum ^ config.exps[product]; // though exps[-1]= undefined and undefined ^ anything = anything in chrome, this behavior may not hold everywhere, so do the check\n\t}\n\treturn sum;\n};\n\n/** @expose **/\nexports._lagrange = lagrange;\n\n// Splits a number string `bits`-length segments, after first \n// optionally zero-padding it to a length that is a multiple of `padLength.\n// Returns array of integers (each less than 2^bits-1), with each element\n// representing a `bits`-length segment of the input string from right to left, \n// i.e. parts[0] represents the right-most `bits`-length segment of the input string.\nfunction split(str, padLength){\n\tif(padLength){\n\t\tstr = padLeft(str, padLength)\n\t}\n\tvar parts = [];\n\tfor(var i=str.length; i>config.bits; i-=config.bits){\n\t\tparts.push(parseInt(str.slice(i-config.bits, i), 2));\n\t}\t\n\tparts.push(parseInt(str.slice(0, i), 2));\t\n\treturn parts;\n};\n\t\n// Pads a string `str` with zeros on the left so that its length is a multiple of `bits`\nfunction padLeft(str, bits){\n\tbits = bits || config.bits\n\tvar missing = str.length % bits;\n\treturn (missing ? new Array(bits - missing + 1).join('0') : '') + str;\n};\n\nfunction hex2bin(str){\n\tvar bin = '', num;\n\tfor(var i=str.length - 1; i>=0; i--){\n\t\tnum = parseInt(str[i], 16)\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid hex character.')\n\t\t}\n\t\tbin = padLeft(num.toString(2), 4) + bin;\n\t}\n\treturn bin;\n}\n\nfunction bin2hex(str){\n\tvar hex = '', num;\n\tstr = padLeft(str, 4);\n\tfor(var i=str.length; i>=4; i-=4){\n\t\tnum = parseInt(str.slice(i-4, i), 2);\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid binary character.')\n\t\t}\n\t\thex = num.toString(16) + hex;\n\t}\n\treturn hex;\n}\n\t\n// Converts a given UTF16 character string to the HEX representation. \n// Each character of the input string is represented by \n// `bytesPerChar` bytes in the output string.\n/** @expose **/\nexports.str2hex = function(str, bytesPerChar){\n\tif(typeof str !== 'string'){\n\t\tthrow new Error('Input must be a character string.');\n\t}\n\tbytesPerChar = bytesPerChar || defaults.bytesPerChar;\n\t\n\tif(typeof bytesPerChar !== 'number' || bytesPerChar%1 !== 0 || bytesPerChar<1 || bytesPerChar > defaults.maxBytesPerChar){\n\t\tthrow new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')\n\t}\n\t\n\tvar hexChars = 2*bytesPerChar;\n\tvar max = Math.pow(16, hexChars) - 1;\n\tvar out = '', num;\n\tfor(var i=0, len=str.length; i<len; i++){\n\t\tnum = str[i].charCodeAt();\n\t\tif(isNaN(num)){\n\t\t\tthrow new Error('Invalid character: ' + str[i]);\n\t\t}else if(num > max){\n\t\t\tvar neededBytes = Math.ceil(Math.log(num+1)/Math.log(256));\n\t\t\tthrow new Error('Invalid character code (' + num +'). Maximum allowable is 256^bytes-1 (' + max + '). To convert this character, use at least ' + neededBytes + ' bytes.')\n\t\t}else{\n\t\t\tout = padLeft(num.toString(16), hexChars) + out;\n\t\t}\n\t}\n\treturn out;\n};\n\t\n// Converts a given HEX number string to a UTF16 character string. \n/** @expose **/\nexports.hex2str = function(str, bytesPerChar){\n\tif(typeof str !== 'string'){\n\t\tthrow new Error('Input must be a hexadecimal string.');\n\t}\n\tbytesPerChar = bytesPerChar || defaults.bytesPerChar;\n\t\n\tif(typeof bytesPerChar !== 'number' || bytesPerChar%1 !== 0 || bytesPerChar<1 || bytesPerChar > defaults.maxBytesPerChar){\n\t\tthrow new Error('Bytes per character must be an integer between 1 and ' + defaults.maxBytesPerChar + ', inclusive.')\n\t}\n\t\n\tvar hexChars = 2*bytesPerChar;\n\tvar out = '';\n\tstr = padLeft(str, hexChars);\n\tfor(var i=0, len = str.length; i<len; i+=hexChars){\n\t\tout = String.fromCharCode(parseInt(str.slice(i, i+hexChars),16)) + out;\n\t}\n\treturn out;\n};\n\t\n// by default, initialize without an RNG\nexports.init();\n})(typeof module !== 'undefined' && module['exports'] ? module['exports'] : (window['secrets'] = {}), typeof GLOBAL !== 'undefined' ? GLOBAL : window );"},"lineCount":533}},"error":null,"hash":"6e6fef40a1f89117709810aeebb0fc22","cacheData":{"env":{}}}